{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tulas\\\\ai_crm_hcp\\\\frontend_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\n// frontend_app/src/App.js\nimport React, { useState, useEffect, useRef } from 'react';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\n// --- Configuration ---\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_BASE_URL = 'http://localhost:8000/api'; // Backend API URL\n\n// --- Redux Slice for Interactions ---\nconst initialState = {\n  interactions: [],\n  loading: false,\n  error: null,\n  chatHistory: [],\n  currentChatAIMessage: '',\n  isChatComplete: false,\n  currentExtractedData: {} // Store data extracted by AI during chat\n};\nconst interactionSlice = createSlice({\n  name: 'interactions',\n  initialState,\n  reducers: {\n    logRequest: state => {\n      state.loading = true;\n      state.error = null;\n    },\n    logFormSuccess: (state, action) => {\n      state.loading = false;\n      state.interactions.push(action.payload);\n      // Optionally clear chat if form submission is related\n    },\n    logChatChunk: (state, action) => {\n      state.loading = false;\n      const {\n        ai_message,\n        is_complete,\n        extracted_data,\n        interaction_id\n      } = action.payload;\n\n      // Add AI message to chat history\n      if (ai_message) {\n        state.chatHistory.push({\n          role: 'assistant',\n          content: ai_message\n        });\n      }\n      state.currentChatAIMessage = ai_message; // For immediate display or further use\n      state.isChatComplete = is_complete;\n      if (extracted_data) {\n        state.currentExtractedData = extracted_data;\n      }\n      if (is_complete && interaction_id) {\n        // If chat interaction was logged, potentially add to a list of logged interactions\n        // For now, we just mark as complete and reset extracted data for next chat.\n        console.log(`Chat interaction logged with ID: ${interaction_id}`);\n        state.currentExtractedData = {}; // Reset for next interaction\n        // You might want to add a system message like \"Interaction Logged\" to chatHistory\n      }\n    },\n    addUserMessageToChat: (state, action) => {\n      state.chatHistory.push({\n        role: 'user',\n        content: action.payload\n      });\n    },\n    logFailure: (state, action) => {\n      state.loading = false;\n      state.error = action.payload;\n    },\n    clearChat: state => {\n      state.chatHistory = [];\n      state.currentChatAIMessage = '';\n      state.isChatComplete = false;\n      state.currentExtractedData = {};\n    },\n    resetError: state => {\n      state.error = null;\n    }\n  }\n});\nexport const {\n  logRequest,\n  logFormSuccess,\n  logChatChunk,\n  addUserMessageToChat,\n  logFailure,\n  clearChat,\n  resetError\n} = interactionSlice.actions;\n\n// --- Redux Store Configuration ---\nconst store = configureStore({\n  reducer: {\n    interactions: interactionSlice.reducer\n  }\n});\n\n// --- API Thunks (Async Actions) ---\nexport const submitInteractionForm = formData => async dispatch => {\n  dispatch(logRequest());\n  try {\n    const response = await axios.post(`${API_BASE_URL}/log_interaction_form`, formData);\n    dispatch(logFormSuccess(response.data));\n    return response.data; // Return data for potential further use in component\n  } catch (error) {\n    var _error$response, _error$response$data;\n    const errorMessage = ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.detail) || error.message || \"An unknown error occurred\";\n    dispatch(logFailure(errorMessage));\n    throw error; // Re-throw for component to handle\n  }\n};\nexport const sendChatMessage = (message, history, currentExtractedData) => async dispatch => {\n  dispatch(logRequest());\n  dispatch(addUserMessageToChat(message)); // Add user message to history immediately\n  try {\n    const payload = {\n      message,\n      history: history,\n      // Send previous history for context\n      current_extraction_data: currentExtractedData\n    };\n    const response = await axios.post(`${API_BASE_URL}/log_interaction_chat`, payload);\n    dispatch(logChatChunk(response.data)); // AI response, completion status, extracted data\n    return response.data;\n  } catch (error) {\n    var _error$response2, _error$response2$data;\n    const errorMessage = ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.detail) || error.message || \"Failed to send chat message\";\n    dispatch(logFailure(errorMessage));\n    dispatch(logChatChunk({\n      ai_message: `Error: ${errorMessage}`,\n      is_complete: false,\n      extracted_data: currentExtractedData\n    })); // Show error in chat\n    throw error;\n  }\n};\n\n// --- React Components ---\n\n// Notification Component\nconst Notification = ({\n  message,\n  type,\n  onClose\n}) => {\n  if (!message) return null;\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed top-5 right-5 p-4 rounded-md text-white ${bgColor} shadow-lg z-50`,\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: message\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onClose,\n      className: \"ml-4 font-bold\",\n      children: \"X\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this);\n};\n\n// InteractionForm Component\n_c = Notification;\nconst InteractionForm = () => {\n  _s();\n  const dispatch = useDispatch();\n  const [formData, setFormData] = useState({\n    hcp_name: '',\n    interaction_date: new Date().toISOString().split('T')[0],\n    // Default to today\n    products_discussed: '',\n    key_discussion_points: '',\n    sentiment: '',\n    // 'Positive', 'Neutral', 'Negative'\n    follow_up_actions: ''\n  });\n  const [formError, setFormError] = useState('');\n  const [formSuccess, setFormSuccess] = useState('');\n  const {\n    loading,\n    error: reduxError\n  } = useSelector(state => state.interactions);\n  useEffect(() => {\n    if (reduxError) {\n      setFormError(reduxError);\n      const timer = setTimeout(() => {\n        setFormError('');\n        dispatch(resetError());\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [reduxError, dispatch]);\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setFormError('');\n    setFormSuccess('');\n    if (!formData.hcp_name || !formData.interaction_date) {\n      setFormError('HCP Name and Interaction Date are required.');\n      return;\n    }\n    try {\n      await dispatch(submitInteractionForm(formData));\n      setFormSuccess('Interaction logged successfully!');\n      setFormData({\n        // Reset form\n        hcp_name: '',\n        interaction_date: new Date().toISOString().split('T')[0],\n        products_discussed: '',\n        key_discussion_points: '',\n        sentiment: '',\n        follow_up_actions: ''\n      });\n      setTimeout(() => setFormSuccess(''), 3000);\n    } catch (err) {\n      // Error is handled by reduxError effect, or setFormError can be used here too\n      // setFormError(err.response?.data?.detail || err.message || 'Failed to log interaction.');\n      // setTimeout(() => setFormError(''), 5000);\n    }\n  };\n  const inputClass = \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-dark focus:ring focus:ring-primary-light focus:ring-opacity-50 text-sm p-2\";\n  const labelClass = \"block text-sm font-medium text-gray-700\";\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    className: \"space-y-6 p-4 sm:p-6 bg-white shadow-md rounded-lg\",\n    children: [formError && /*#__PURE__*/_jsxDEV(Notification, {\n      message: formError,\n      type: \"error\",\n      onClose: () => setFormError('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 21\n    }, this), formSuccess && /*#__PURE__*/_jsxDEV(Notification, {\n      message: formSuccess,\n      type: \"success\",\n      onClose: () => setFormSuccess('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"hcp_name\",\n        className: labelClass,\n        children: [\"HCP Name \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 67\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"hcp_name\",\n        id: \"hcp_name\",\n        value: formData.hcp_name,\n        onChange: handleChange,\n        className: inputClass,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"interaction_date\",\n        className: labelClass,\n        children: [\"Date of Interaction \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-red-500\",\n          children: \"*\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 86\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"date\",\n        name: \"interaction_date\",\n        id: \"interaction_date\",\n        value: formData.interaction_date,\n        onChange: handleChange,\n        className: inputClass,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"products_discussed\",\n        className: labelClass,\n        children: \"Products Discussed\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"products_discussed\",\n        id: \"products_discussed\",\n        value: formData.products_discussed,\n        onChange: handleChange,\n        className: inputClass,\n        placeholder: \"e.g., ProductA, ProductB\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"key_discussion_points\",\n        className: labelClass,\n        children: \"Key Discussion Points\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"key_discussion_points\",\n        id: \"key_discussion_points\",\n        value: formData.key_discussion_points,\n        onChange: handleChange,\n        rows: \"3\",\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"sentiment\",\n        className: labelClass,\n        children: \"Sentiment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        name: \"sentiment\",\n        id: \"sentiment\",\n        value: formData.sentiment,\n        onChange: handleChange,\n        className: inputClass,\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Select Sentiment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Positive\",\n          children: \"Positive\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Neutral\",\n          children: \"Neutral\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"Negative\",\n          children: \"Negative\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"follow_up_actions\",\n        className: labelClass,\n        children: \"Follow-up Actions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"follow_up_actions\",\n        id: \"follow_up_actions\",\n        value: formData.follow_up_actions,\n        onChange: handleChange,\n        rows: \"2\",\n        className: inputClass\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        disabled: loading,\n        className: \"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-dark disabled:opacity-50\",\n        children: loading ? 'Submitting...' : 'Submit Interaction'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n// InteractionChat Component\n_s(InteractionForm, \"CQW1nafKL2QNJrWsWwmWCnCuK8g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c2 = InteractionForm;\nconst InteractionChat = () => {\n  _s2();\n  const dispatch = useDispatch();\n  const [message, setMessage] = useState('');\n  const {\n    chatHistory,\n    loading,\n    currentExtractedData,\n    error: reduxError\n  } = useSelector(state => state.interactions);\n  const chatMessagesRef = useRef(null);\n  const [chatError, setChatError] = useState('');\n  useEffect(() => {\n    if (chatMessagesRef.current) {\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\n    }\n  }, [chatHistory]);\n  useEffect(() => {\n    if (reduxError) {\n      setChatError(reduxError); // Display error from Redux state if it's chat related\n      const timer = setTimeout(() => {\n        setChatError('');\n        dispatch(resetError());\n      }, 5000);\n      return () => clearTimeout(timer);\n    }\n  }, [reduxError, dispatch]);\n  const handleSendMessage = async e => {\n    e.preventDefault();\n    if (!message.trim()) return;\n    setChatError('');\n\n    // Pass current chatHistory (before adding new user message) and currentExtractedData\n    const historyForAPI = [...chatHistory];\n    try {\n      await dispatch(sendChatMessage(message, historyForAPI, currentExtractedData));\n      setMessage(''); // Clear input after sending\n    } catch (err) {\n      // Error is handled by reduxError effect\n      // setChatError(err.response?.data?.detail || err.message || 'Failed to send message.');\n      // setTimeout(() => setChatError(''), 5000);\n    }\n  };\n  const handleClearChat = () => {\n    dispatch(clearChat());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-[calc(100vh-200px)] max-h-[700px] bg-white shadow-md rounded-lg\",\n    children: [chatError && /*#__PURE__*/_jsxDEV(Notification, {\n      message: chatError,\n      type: \"error\",\n      onClose: () => setChatError('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-4 border-b border-gray-200 flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-lg font-semibold text-gray-800\",\n        children: \"Chat Interaction Log\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleClearChat,\n        className: \"text-sm text-primary hover:text-primary-dark\",\n        title: \"Clear chat and start over\",\n        children: \"Clear Chat\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: chatMessagesRef,\n      className: \"flex-grow p-4 space-y-4 overflow-y-auto chat-messages\",\n      children: [chatHistory.map((chat, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `flex ${chat.role === 'user' ? 'justify-end' : 'justify-start'}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `max-w-xs lg:max-w-md px-4 py-2 rounded-lg shadow ${chat.role === 'user' ? 'bg-primary text-white' : 'bg-gray-200 text-gray-800'}`,\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm\",\n            children: chat.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 11\n      }, this)), loading && chatHistory.length > 0 && chatHistory[chatHistory.length - 1].role === 'user' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-start\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"max-w-xs lg:max-w-md px-4 py-2 rounded-lg shadow bg-gray-200 text-gray-800\",\n          children: /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm italic\",\n            children: \"AI is thinking...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 315,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 314,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSendMessage,\n      className: \"p-4 border-t border-gray-200\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: message,\n          onChange: e => setMessage(e.target.value),\n          placeholder: \"Describe the interaction... (e.g., 'Met Dr. Smith today...')\",\n          className: \"flex-grow block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-dark focus:ring focus:ring-primary-light focus:ring-opacity-50 text-sm p-2\",\n          disabled: loading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          className: \"px-4 py-2 bg-primary text-white rounded-md shadow-sm hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-dark disabled:opacity-50 text-sm\",\n          children: \"Send\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 322,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 321,\n      columnNumber: 7\n    }, this), Object.keys(currentExtractedData).length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-2 border-t border-gray-100 bg-gray-50 text-xs text-gray-600\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"font-semibold mb-1\",\n        children: \"AI has extracted so far:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 338,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"list-disc list-inside pl-2\",\n        children: Object.entries(currentExtractedData).map(([key, value]) => value ? /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-medium\",\n            children: [key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase()), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 37\n          }, this), \" \", String(value)]\n        }, key, true, {\n          fileName: _jsxFileName,\n          lineNumber: 341,\n          columnNumber: 23\n        }, this) : null)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 339,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 337,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 293,\n    columnNumber: 5\n  }, this);\n};\n\n// LogInteractionScreen Component (Main View)\n_s2(InteractionChat, \"gwqPehGQk3PgzBacPgzBSYVmoWk=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c3 = InteractionChat;\nconst LogInteractionScreen = () => {\n  _s3();\n  const [activeTab, setActiveTab] = useState('form'); // 'form' or 'chat'\n\n  const tabButtonClass = tabName => `py-2 px-4 font-medium text-sm rounded-md focus:outline-none transition-colors duration-150 ease-in-out ` + (activeTab === tabName ? 'bg-primary text-white shadow-md' : 'text-gray-600 hover:bg-gray-200 hover:text-gray-800');\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8 font-sans\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-2xl mx-auto\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"mb-6 text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-3xl font-bold text-gray-800\",\n          children: \"Log HCP Interaction\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 365,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-1\",\n          children: \"Choose your preferred method to log interactions.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 366,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-6 flex justify-center space-x-2 p-1 bg-gray-200 rounded-lg shadow-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('form'),\n          className: tabButtonClass('form'),\n          children: \"Structured Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 370,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => setActiveTab('chat'),\n          className: tabButtonClass('chat'),\n          children: \"Conversational Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 369,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: activeTab === 'form' ? /*#__PURE__*/_jsxDEV(InteractionForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 35\n        }, this) : /*#__PURE__*/_jsxDEV(InteractionChat, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 379,\n          columnNumber: 57\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 378,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 363,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 362,\n    columnNumber: 5\n  }, this);\n};\n\n// App Component (Root)\n_s3(LogInteractionScreen, \"x6o9bZRYfVBN/Qg3EYFgMvvq2gY=\");\n_c4 = LogInteractionScreen;\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: store,\n    children: /*#__PURE__*/_jsxDEV(LogInteractionScreen, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 390,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 389,\n    columnNumber: 5\n  }, this);\n}\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Notification\");\n$RefreshReg$(_c2, \"InteractionForm\");\n$RefreshReg$(_c3, \"InteractionChat\");\n$RefreshReg$(_c4, \"LogInteractionScreen\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Provider","useSelector","useDispatch","configureStore","createSlice","axios","jsxDEV","_jsxDEV","API_BASE_URL","initialState","interactions","loading","error","chatHistory","currentChatAIMessage","isChatComplete","currentExtractedData","interactionSlice","name","reducers","logRequest","state","logFormSuccess","action","push","payload","logChatChunk","ai_message","is_complete","extracted_data","interaction_id","role","content","console","log","addUserMessageToChat","logFailure","clearChat","resetError","actions","store","reducer","submitInteractionForm","formData","dispatch","response","post","data","_error$response","_error$response$data","errorMessage","detail","message","sendChatMessage","history","current_extraction_data","_error$response2","_error$response2$data","Notification","type","onClose","bgColor","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","InteractionForm","_s","setFormData","hcp_name","interaction_date","Date","toISOString","split","products_discussed","key_discussion_points","sentiment","follow_up_actions","formError","setFormError","formSuccess","setFormSuccess","reduxError","timer","setTimeout","clearTimeout","handleChange","e","target","value","handleSubmit","preventDefault","err","inputClass","labelClass","onSubmit","htmlFor","id","onChange","required","placeholder","rows","disabled","_c2","InteractionChat","_s2","setMessage","chatMessagesRef","chatError","setChatError","current","scrollTop","scrollHeight","handleSendMessage","trim","historyForAPI","handleClearChat","title","ref","map","chat","index","length","Object","keys","entries","key","replace","l","toUpperCase","String","_c3","LogInteractionScreen","_s3","activeTab","setActiveTab","tabButtonClass","tabName","_c4","App","_c5","$RefreshReg$"],"sources":["C:/Users/tulas/ai_crm_hcp/frontend_app/src/App.js"],"sourcesContent":["// frontend_app/src/App.js\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { Provider, useSelector, useDispatch } from 'react-redux';\r\nimport { configureStore, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\n\r\n// --- Configuration ---\r\nconst API_BASE_URL = 'http://localhost:8000/api'; // Backend API URL\r\n\r\n// --- Redux Slice for Interactions ---\r\nconst initialState = {\r\n  interactions: [],\r\n  loading: false,\r\n  error: null,\r\n  chatHistory: [],\r\n  currentChatAIMessage: '',\r\n  isChatComplete: false,\r\n  currentExtractedData: {}, // Store data extracted by AI during chat\r\n};\r\n\r\nconst interactionSlice = createSlice({\r\n  name: 'interactions',\r\n  initialState,\r\n  reducers: {\r\n    logRequest: (state) => {\r\n      state.loading = true;\r\n      state.error = null;\r\n    },\r\n    logFormSuccess: (state, action) => {\r\n      state.loading = false;\r\n      state.interactions.push(action.payload);\r\n      // Optionally clear chat if form submission is related\r\n    },\r\n    logChatChunk: (state, action) => {\r\n        state.loading = false;\r\n        const { ai_message, is_complete, extracted_data, interaction_id } = action.payload;\r\n        \r\n        // Add AI message to chat history\r\n        if (ai_message) {\r\n            state.chatHistory.push({ role: 'assistant', content: ai_message });\r\n        }\r\n        state.currentChatAIMessage = ai_message; // For immediate display or further use\r\n        state.isChatComplete = is_complete;\r\n        \r\n        if (extracted_data) {\r\n            state.currentExtractedData = extracted_data;\r\n        }\r\n        if (is_complete && interaction_id) {\r\n            // If chat interaction was logged, potentially add to a list of logged interactions\r\n            // For now, we just mark as complete and reset extracted data for next chat.\r\n            console.log(`Chat interaction logged with ID: ${interaction_id}`);\r\n            state.currentExtractedData = {}; // Reset for next interaction\r\n            // You might want to add a system message like \"Interaction Logged\" to chatHistory\r\n        }\r\n    },\r\n    addUserMessageToChat: (state, action) => {\r\n        state.chatHistory.push({ role: 'user', content: action.payload });\r\n    },\r\n    logFailure: (state, action) => {\r\n      state.loading = false;\r\n      state.error = action.payload;\r\n    },\r\n    clearChat: (state) => {\r\n        state.chatHistory = [];\r\n        state.currentChatAIMessage = '';\r\n        state.isChatComplete = false;\r\n        state.currentExtractedData = {};\r\n    },\r\n    resetError: (state) => {\r\n        state.error = null;\r\n    }\r\n  },\r\n});\r\n\r\nexport const {\r\n  logRequest,\r\n  logFormSuccess,\r\n  logChatChunk,\r\n  addUserMessageToChat,\r\n  logFailure,\r\n  clearChat,\r\n  resetError\r\n} = interactionSlice.actions;\r\n\r\n// --- Redux Store Configuration ---\r\nconst store = configureStore({\r\n  reducer: {\r\n    interactions: interactionSlice.reducer,\r\n  },\r\n});\r\n\r\n// --- API Thunks (Async Actions) ---\r\nexport const submitInteractionForm = (formData) => async (dispatch) => {\r\n  dispatch(logRequest());\r\n  try {\r\n    const response = await axios.post(`${API_BASE_URL}/log_interaction_form`, formData);\r\n    dispatch(logFormSuccess(response.data));\r\n    return response.data; // Return data for potential further use in component\r\n  } catch (error) {\r\n    const errorMessage = error.response?.data?.detail || error.message || \"An unknown error occurred\";\r\n    dispatch(logFailure(errorMessage));\r\n    throw error; // Re-throw for component to handle\r\n  }\r\n};\r\n\r\nexport const sendChatMessage = (message, history, currentExtractedData) => async (dispatch) => {\r\n  dispatch(logRequest());\r\n  dispatch(addUserMessageToChat(message)); // Add user message to history immediately\r\n  try {\r\n    const payload = { \r\n        message, \r\n        history: history, // Send previous history for context\r\n        current_extraction_data: currentExtractedData\r\n    };\r\n    const response = await axios.post(`${API_BASE_URL}/log_interaction_chat`, payload);\r\n    dispatch(logChatChunk(response.data)); // AI response, completion status, extracted data\r\n    return response.data;\r\n  } catch (error) {\r\n    const errorMessage = error.response?.data?.detail || error.message || \"Failed to send chat message\";\r\n    dispatch(logFailure(errorMessage));\r\n    dispatch(logChatChunk({ ai_message: `Error: ${errorMessage}`, is_complete: false, extracted_data: currentExtractedData })); // Show error in chat\r\n    throw error;\r\n  }\r\n};\r\n\r\n\r\n// --- React Components ---\r\n\r\n// Notification Component\r\nconst Notification = ({ message, type, onClose }) => {\r\n  if (!message) return null;\r\n  const bgColor = type === 'success' ? 'bg-green-500' : 'bg-red-500';\r\n  return (\r\n    <div className={`fixed top-5 right-5 p-4 rounded-md text-white ${bgColor} shadow-lg z-50`}>\r\n      <span>{message}</span>\r\n      <button onClick={onClose} className=\"ml-4 font-bold\">X</button>\r\n    </div>\r\n  );\r\n};\r\n\r\n// InteractionForm Component\r\nconst InteractionForm = () => {\r\n  const dispatch = useDispatch();\r\n  const [formData, setFormData] = useState({\r\n    hcp_name: '',\r\n    interaction_date: new Date().toISOString().split('T')[0], // Default to today\r\n    products_discussed: '',\r\n    key_discussion_points: '',\r\n    sentiment: '', // 'Positive', 'Neutral', 'Negative'\r\n    follow_up_actions: '',\r\n  });\r\n  const [formError, setFormError] = useState('');\r\n  const [formSuccess, setFormSuccess] = useState('');\r\n\r\n  const { loading, error: reduxError } = useSelector((state) => state.interactions);\r\n   useEffect(() => {\r\n    if (reduxError) {\r\n      setFormError(reduxError);\r\n      const timer = setTimeout(() => {\r\n        setFormError('');\r\n        dispatch(resetError());\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [reduxError, dispatch]);\r\n\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({ ...formData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setFormError('');\r\n    setFormSuccess('');\r\n    if (!formData.hcp_name || !formData.interaction_date) {\r\n      setFormError('HCP Name and Interaction Date are required.');\r\n      return;\r\n    }\r\n    try {\r\n      await dispatch(submitInteractionForm(formData));\r\n      setFormSuccess('Interaction logged successfully!');\r\n      setFormData({ // Reset form\r\n        hcp_name: '',\r\n        interaction_date: new Date().toISOString().split('T')[0],\r\n        products_discussed: '',\r\n        key_discussion_points: '',\r\n        sentiment: '',\r\n        follow_up_actions: '',\r\n      });\r\n      setTimeout(() => setFormSuccess(''), 3000);\r\n    } catch (err) {\r\n      // Error is handled by reduxError effect, or setFormError can be used here too\r\n      // setFormError(err.response?.data?.detail || err.message || 'Failed to log interaction.');\r\n      // setTimeout(() => setFormError(''), 5000);\r\n    }\r\n  };\r\n\r\n  const inputClass = \"mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-dark focus:ring focus:ring-primary-light focus:ring-opacity-50 text-sm p-2\";\r\n  const labelClass = \"block text-sm font-medium text-gray-700\";\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className=\"space-y-6 p-4 sm:p-6 bg-white shadow-md rounded-lg\">\r\n      {formError && <Notification message={formError} type=\"error\" onClose={() => setFormError('')} />}\r\n      {formSuccess && <Notification message={formSuccess} type=\"success\" onClose={() => setFormSuccess('')} />}\r\n      \r\n      <div>\r\n        <label htmlFor=\"hcp_name\" className={labelClass}>HCP Name <span className=\"text-red-500\">*</span></label>\r\n        <input type=\"text\" name=\"hcp_name\" id=\"hcp_name\" value={formData.hcp_name} onChange={handleChange} className={inputClass} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"interaction_date\" className={labelClass}>Date of Interaction <span className=\"text-red-500\">*</span></label>\r\n        <input type=\"date\" name=\"interaction_date\" id=\"interaction_date\" value={formData.interaction_date} onChange={handleChange} className={inputClass} required />\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"products_discussed\" className={labelClass}>Products Discussed</label>\r\n        <input type=\"text\" name=\"products_discussed\" id=\"products_discussed\" value={formData.products_discussed} onChange={handleChange} className={inputClass} placeholder=\"e.g., ProductA, ProductB\"/>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"key_discussion_points\" className={labelClass}>Key Discussion Points</label>\r\n        <textarea name=\"key_discussion_points\" id=\"key_discussion_points\" value={formData.key_discussion_points} onChange={handleChange} rows=\"3\" className={inputClass}></textarea>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"sentiment\" className={labelClass}>Sentiment</label>\r\n        <select name=\"sentiment\" id=\"sentiment\" value={formData.sentiment} onChange={handleChange} className={inputClass}>\r\n          <option value=\"\">Select Sentiment</option>\r\n          <option value=\"Positive\">Positive</option>\r\n          <option value=\"Neutral\">Neutral</option>\r\n          <option value=\"Negative\">Negative</option>\r\n        </select>\r\n      </div>\r\n      <div>\r\n        <label htmlFor=\"follow_up_actions\" className={labelClass}>Follow-up Actions</label>\r\n        <textarea name=\"follow_up_actions\" id=\"follow_up_actions\" value={formData.follow_up_actions} onChange={handleChange} rows=\"2\" className={inputClass}></textarea>\r\n      </div>\r\n      <div>\r\n        <button type=\"submit\" disabled={loading} className=\"w-full flex justify-center py-2 px-4 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-primary hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-dark disabled:opacity-50\">\r\n          {loading ? 'Submitting...' : 'Submit Interaction'}\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\n// InteractionChat Component\r\nconst InteractionChat = () => {\r\n  const dispatch = useDispatch();\r\n  const [message, setMessage] = useState('');\r\n  const { chatHistory, loading, currentExtractedData, error: reduxError } = useSelector((state) => state.interactions);\r\n  const chatMessagesRef = useRef(null);\r\n  const [chatError, setChatError] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (chatMessagesRef.current) {\r\n      chatMessagesRef.current.scrollTop = chatMessagesRef.current.scrollHeight;\r\n    }\r\n  }, [chatHistory]);\r\n\r\n  useEffect(() => {\r\n    if (reduxError) {\r\n      setChatError(reduxError); // Display error from Redux state if it's chat related\r\n      const timer = setTimeout(() => {\r\n        setChatError('');\r\n        dispatch(resetError());\r\n      }, 5000);\r\n      return () => clearTimeout(timer);\r\n    }\r\n  }, [reduxError, dispatch]);\r\n\r\n\r\n  const handleSendMessage = async (e) => {\r\n    e.preventDefault();\r\n    if (!message.trim()) return;\r\n    setChatError('');\r\n\r\n    // Pass current chatHistory (before adding new user message) and currentExtractedData\r\n    const historyForAPI = [...chatHistory]; \r\n    try {\r\n      await dispatch(sendChatMessage(message, historyForAPI, currentExtractedData));\r\n      setMessage(''); // Clear input after sending\r\n    } catch (err) {\r\n      // Error is handled by reduxError effect\r\n      // setChatError(err.response?.data?.detail || err.message || 'Failed to send message.');\r\n      // setTimeout(() => setChatError(''), 5000);\r\n    }\r\n  };\r\n  \r\n  const handleClearChat = () => {\r\n    dispatch(clearChat());\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col h-[calc(100vh-200px)] max-h-[700px] bg-white shadow-md rounded-lg\">\r\n      {chatError && <Notification message={chatError} type=\"error\" onClose={() => setChatError('')} />}\r\n      <div className=\"p-4 border-b border-gray-200 flex justify-between items-center\">\r\n        <h3 className=\"text-lg font-semibold text-gray-800\">Chat Interaction Log</h3>\r\n        <button \r\n            onClick={handleClearChat}\r\n            className=\"text-sm text-primary hover:text-primary-dark\"\r\n            title=\"Clear chat and start over\"\r\n        >\r\n            Clear Chat\r\n        </button>\r\n      </div>\r\n      <div ref={chatMessagesRef} className=\"flex-grow p-4 space-y-4 overflow-y-auto chat-messages\">\r\n        {chatHistory.map((chat, index) => (\r\n          <div key={index} className={`flex ${chat.role === 'user' ? 'justify-end' : 'justify-start'}`}>\r\n            <div className={`max-w-xs lg:max-w-md px-4 py-2 rounded-lg shadow ${chat.role === 'user' ? 'bg-primary text-white' : 'bg-gray-200 text-gray-800'}`}>\r\n              <p className=\"text-sm\">{chat.content}</p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {loading && chatHistory.length > 0 && chatHistory[chatHistory.length-1].role === 'user' && (\r\n            <div className=\"flex justify-start\">\r\n                <div className=\"max-w-xs lg:max-w-md px-4 py-2 rounded-lg shadow bg-gray-200 text-gray-800\">\r\n                    <p className=\"text-sm italic\">AI is thinking...</p>\r\n                </div>\r\n            </div>\r\n        )}\r\n      </div>\r\n      <form onSubmit={handleSendMessage} className=\"p-4 border-t border-gray-200\">\r\n        <div className=\"flex items-center space-x-2\">\r\n          <input\r\n            type=\"text\"\r\n            value={message}\r\n            onChange={(e) => setMessage(e.target.value)}\r\n            placeholder=\"Describe the interaction... (e.g., 'Met Dr. Smith today...')\"\r\n            className=\"flex-grow block w-full rounded-md border-gray-300 shadow-sm focus:border-primary-dark focus:ring focus:ring-primary-light focus:ring-opacity-50 text-sm p-2\"\r\n            disabled={loading}\r\n          />\r\n          <button type=\"submit\" disabled={loading} className=\"px-4 py-2 bg-primary text-white rounded-md shadow-sm hover:bg-primary-dark focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-dark disabled:opacity-50 text-sm\">\r\n            Send\r\n          </button>\r\n        </div>\r\n      </form>\r\n       {Object.keys(currentExtractedData).length > 0 && (\r\n        <div className=\"p-2 border-t border-gray-100 bg-gray-50 text-xs text-gray-600\">\r\n          <p className=\"font-semibold mb-1\">AI has extracted so far:</p>\r\n          <ul className=\"list-disc list-inside pl-2\">\r\n            {Object.entries(currentExtractedData).map(([key, value]) => \r\n              value ? <li key={key}><span className=\"font-medium\">{key.replace(/_/g, ' ').replace(/\\b\\w/g, l => l.toUpperCase())}:</span> {String(value)}</li> : null\r\n            )}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\n// LogInteractionScreen Component (Main View)\r\nconst LogInteractionScreen = () => {\r\n  const [activeTab, setActiveTab] = useState('form'); // 'form' or 'chat'\r\n\r\n  const tabButtonClass = (tabName) => \r\n    `py-2 px-4 font-medium text-sm rounded-md focus:outline-none transition-colors duration-150 ease-in-out ` +\r\n    (activeTab === tabName \r\n      ? 'bg-primary text-white shadow-md' \r\n      : 'text-gray-600 hover:bg-gray-200 hover:text-gray-800');\r\n\r\n  return (\r\n    <div className=\"min-h-screen bg-gray-100 py-8 px-4 sm:px-6 lg:px-8 font-sans\">\r\n      <div className=\"max-w-2xl mx-auto\">\r\n        <header className=\"mb-6 text-center\">\r\n          <h1 className=\"text-3xl font-bold text-gray-800\">Log HCP Interaction</h1>\r\n          <p className=\"text-sm text-gray-500 mt-1\">Choose your preferred method to log interactions.</p>\r\n        </header>\r\n        \r\n        <div className=\"mb-6 flex justify-center space-x-2 p-1 bg-gray-200 rounded-lg shadow-sm\">\r\n          <button onClick={() => setActiveTab('form')} className={tabButtonClass('form')}>\r\n            Structured Form\r\n          </button>\r\n          <button onClick={() => setActiveTab('chat')} className={tabButtonClass('chat')}>\r\n            Conversational Chat\r\n          </button>\r\n        </div>\r\n\r\n        <div>\r\n          {activeTab === 'form' ? <InteractionForm /> : <InteractionChat />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// App Component (Root)\r\nfunction App() {\r\n  return (\r\n    <Provider store={store}>\r\n      <LogInteractionScreen />\r\n    </Provider>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}